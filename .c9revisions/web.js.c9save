{"ts":1344899920634,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\r\n * Setup the webserver.\r\n * Using the express webframework, and ejs templating.\r\n * I am trying to follow the MVC pattern.\r\n */\r\n \r\nvar express = require('express'); \r\nvar app = module.exports = express(); \r\n// Configuration\r\n\r\napp.configure(function(){\r\n  app.enable(\"jsonp callback\");\r\n  \r\n  app.set('views', __dirname + '/views');\r\n  app.set('view engine', 'ejs');\r\n  \r\n  app.use(express.bodyParser());\r\n  app.use(express.methodOverride());\r\n  app.use(express.static(__dirname + '/public'));\r\n  app.use(app.router);  \r\n}); \r\n\r\napp.configure('development', function(){\r\n  app.use(express.errorHandler({ dumpExceptions: true, showStack: true })); \r\n});\r\n\r\napp.configure('production', function(){\r\n  app.use(express.errorHandler()); \r\n});\r\n\r\n/**\r\n * Route Section\r\n */\r\n// Base Route\r\napp.get('/', function(req, res){\r\n  res.send('Welcome to Site Robot');\r\n});\r\n\r\napp.get('/debug', function(req, res){\r\n    var controller = require('./controllers/debugController.js');\r\n    controller.loadModel(req, function(model) {  \r\n        res.render(model.bodyTemplate, model);\r\n    });    \r\n});\r\n\r\napp.post('/debug', function(req, res){\r\n    var controller = require('./controllers/debugController.js');\r\n    controller.loadModel(req, function(model) {  \r\n        res.render(model.bodyTemplate, model);\r\n    });    \r\n});\r\n\r\n\r\n/**\r\n * Start Web Server\r\n */\r\nvar port = process.env.PORT || 3000;\r\napp.listen(port);\r\nconsole.log(\"Express server listening on: \" + port);"]],"start1":0,"start2":0,"length1":0,"length2":1462}]],"length":1462}
