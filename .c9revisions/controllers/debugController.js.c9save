{"ts":1344899874177,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"this.loadModel = function (request, callback) {        \r\n    var modelObject = require('../models/debug.js');\r\n    var model = new modelObject('debug.ejs');\r\n    \r\n    if(typeof request.body.debugText !== 'undefined') {\r\n        model.isPost = true;\r\n        model.debugText = request.body.debugText;\r\n        \r\n        model.output = sandbox(request.body.debugText);\r\n        callback(model);\r\n        \r\n//        sandbox(request.body.debugText, function(output) {\r\n//            model.output = \"Example 1: \" + output.result;\r\n//            callback(model);\r\n//        });    \r\n        \r\n//        var Sandbox = require(\"sandbox\"), \r\n//        s = new Sandbox();\r\n//\r\n//        s.run(request.body.debugText, function(output) {\r\n//            model.output = \"Example 1: \" + output.result;\r\n//            callback(model);\r\n//        });     \r\n    }\r\n    else {\r\n        model.output = \"no output\";\r\n        callback(model);\r\n    }\r\n};\r\n\r\nfunction sandbox(code) {\r\n    var vm = require('vm'), \r\n    initSandbox = {\r\n        request: require('request'),\r\n        async: require('async'),\r\n//        http: require('http'),\r\n        result: \"\"\r\n    },\r\n    context = vm.createContext(initSandbox);\r\n    vm.runInContext(code, context);   \r\n    return context.result;\r\n}\r\n\r\n//function sandbox(code, callback) {\r\n//    var util = require('util');\r\n//    var vm = require('vm');\r\n//     \r\n//    var contextObject = {\r\n//    }\r\n//        contextObject.contextMethod = function(text) {\r\n//        console.log(text);\r\n//    }\r\n//    var myContext = vm.createContext(contextObject);\r\n//        myContext.contextMethod2 = function(text) {\r\n//        console.log(text);\r\n//    }\r\n//    var scriptText = 'contextMethod(\"Hello World!\"); contextMethod2(\"Hello Universe!\");';\r\n//    var script = vm.createScript(scriptText);\r\n//    script.runInContext(myContext);\r\n//}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1851}]],"length":1851}
{"contributors":[],"silentsave":false,"ts":1350838755890,"patch":[[{"diffs":[[0,"js')"],[-1,";"],[1,","],[0,"\r\n    "],[-1,"var"],[1,"   "],[0," mod"]],"start1":104,"start2":104,"length1":18,"length2":18},{"diffs":[[0,"ejs');\r\n    "],[1,"    \r\n"],[0,"\r\n    if(typ"]],"start1":150,"start2":150,"length1":24,"length2":30},{"diffs":[[0,"    "],[-1,"model.isPost = true;\r\n        model.debugText = request.body.debugText;\r\n        \r\n        model.output"],[1,"\r\n        model"],[0," = sand"],[-1,"box(request.body.debugText);\r\n        callback(model);\r\n        \r\n//        sandbox(request.body.debugText, function(output) {\r\n//            model.output = \"Example 1: \" + output.result;\r\n//            callback(model);\r\n//        });    \r\n        \r\n//        var Sandbox = require(\"sandbox\"), \r\n//        s = new Sandbox();\r\n//\r\n//        s.run(request.body.debugText, function(output) {\r\n//            model.output = \"Example 1: \" + output.result;\r\n//            callback(model);\r\n//        });     "],[1,"BoxTest(model, request, callback);"],[0,"\r\n  "]],"start1":231,"start2":231,"length1":619,"length2":64},{"diffs":[[0,"sand"],[-1,"box(code) {\r\n    var vm = require('vm'), \r\n    initSandbox ="],[1,"BoxTest(model, request, callback)"],[0," {\r\n    "],[-1,"    request: require('request'),\r\n        async: require('async'),"],[1,"var playground = require('../libs/playground.js');"],[0,"\r\n"],[-1,"// "],[0,"    "],[-1,"   http: require('http'),\r\n        result: \"\"\r\n    },\r\n    context = vm.createContext(initSandbox);\r\n    vm.runInContext(code, context);   \r\n    return context.result;\r\n}\r\n\r\n//function sandbox(code, callback) {\r\n//    var util = require('util');\r\n//    var vm = require('vm');\r\n//     \r\n//    var contextObject = {\r\n//"],[1,"model.isPost = true;\r\n    model.debugText = request.body.debugText;\r\n"],[0,"    "],[-1,"}"],[0,"\r\n"],[-1,"//        contextObject.contextMethod = function(text) {\r\n//        console.log(text);\r\n//    }\r\n//    var myContext = vm.createContext(contextObject);\r\n//        myContext.contextMethod2 ="],[1,"    model.output = playground.exec(request.body.debugText,"],[0," fun"]],"start1":397,"start2":397,"length1":665,"length2":238},{"diffs":[[0,"ion("],[-1,"tex"],[1,"resul"],[0,"t) {\r\n"],[-1,"//"],[0,"        "],[-1,"console.log(text);\r\n//    }\r\n//    var scriptText = 'contextMethod(\"Hello World!\"); contextMethod2(\"Hello Universe!\");'"],[1,"model.output = result"],[0,";\r\n"],[-1,"//"],[0,"    "],[-1,"var script = vm.createScript(scriptText"],[1,"    callback(model"],[0,");\r\n"],[-1,"//"],[0,"    "],[-1,"script.runInContext(myContext"],[1,"}"],[0,");\r\n"],[-1,"//"],[0,"}\r\n"],[1,"\r\n"]],"start1":637,"start2":637,"length1":238,"length2":87}]],"length":724,"saved":false}
{"ts":1350840083869,"patch":[[{"diffs":[[0,"debug.ejs');"],[-1,"\r\n"],[0,"        \r\n\r\n"]],"start1":144,"start2":144,"length1":26,"length2":24},{"diffs":[[0,"\r\n        \r\n"],[1,"        if(request.body.execution == \"iron\")\r\n            model = loadIronIoTest (model, request, callback);\r\n        else\r\n    "],[0,"        mode"]],"start1":223,"start2":223,"length1":24,"length2":152},{"diffs":[[0,"el = sandBoxTest"],[1," "],[0,"(model, request,"]],"start1":374,"start2":374,"length1":32,"length2":33},{"diffs":[[0,"callback);\r\n"],[1,"            \r\n"],[0,"    }\r\n    e"]],"start1":408,"start2":408,"length1":24,"length2":38},{"diffs":[[0,"  });\r\n}\r\n\r\n"],[1,"function loadIronIoTest(model, request, callback) {\r\n    model.isPost = true;\r\n    model.debugText = request.body.debugText;\r\n    \r\n    model.output = playground.exec(request.body.debugText, function(result) {\r\n        model.output = result;\r\n        callback(model);\r\n    });\r\n}\r\n\r\n"]],"start1":853,"start2":853,"length1":12,"length2":295}]],"length":1148,"saved":false}
{"ts":1350840394167,"patch":[[{"diffs":[[0,"allback) {\r\n"],[1,"//"],[0,"    model.is"]],"start1":906,"start2":906,"length1":24,"length2":26},{"diffs":[[0,"isPost = true;\r\n"],[1,"//"],[0,"    model.debugT"]],"start1":930,"start2":930,"length1":32,"length2":34},{"diffs":[[0,"ody.debugText;\r\n"],[1,"//"],[0,"    \r\n"],[1,"//"],[0,"    model.output"]],"start1":979,"start2":979,"length1":38,"length2":42},{"diffs":[[0,"tion(result) {\r\n"],[1,"//"],[0,"        model.ou"]],"start1":1068,"start2":1068,"length1":32,"length2":34},{"diffs":[[0,"tput = result;\r\n"],[1,"//"],[0,"        callback"]],"start1":1102,"start2":1102,"length1":32,"length2":34},{"diffs":[[0,"llback(model);\r\n"],[1,"//"],[0,"    });\r\n}\r\n\r\n"]],"start1":1130,"start2":1130,"length1":30,"length2":32}]],"length":1162,"saved":false}
{"ts":1350840427123,"patch":[[{"diffs":[[0,"\n// "],[-1,"   model.isPost = true;\r\n//    model.debugText = request.body.debugText;\r\n//    \r\n//    model.output = playground.exec(request.body.debugText, function(result) {\r\n//        model.output = result;\r\n//        callback(model);\r\n//    });"],[1,"Stu "],[0,"\r\n}\r"]],"start1":917,"start2":917,"length1":242,"length2":12}]],"length":932,"saved":false}
