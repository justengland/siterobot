{"ts":1344899874177,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"this.loadModel = function (request, callback) {        \r\n    var modelObject = require('../models/debug.js');\r\n    var model = new modelObject('debug.ejs');\r\n    \r\n    if(typeof request.body.debugText !== 'undefined') {\r\n        model.isPost = true;\r\n        model.debugText = request.body.debugText;\r\n        \r\n        model.output = sandbox(request.body.debugText);\r\n        callback(model);\r\n        \r\n//        sandbox(request.body.debugText, function(output) {\r\n//            model.output = \"Example 1: \" + output.result;\r\n//            callback(model);\r\n//        });    \r\n        \r\n//        var Sandbox = require(\"sandbox\"), \r\n//        s = new Sandbox();\r\n//\r\n//        s.run(request.body.debugText, function(output) {\r\n//            model.output = \"Example 1: \" + output.result;\r\n//            callback(model);\r\n//        });     \r\n    }\r\n    else {\r\n        model.output = \"no output\";\r\n        callback(model);\r\n    }\r\n};\r\n\r\nfunction sandbox(code) {\r\n    var vm = require('vm'), \r\n    initSandbox = {\r\n        request: require('request'),\r\n        async: require('async'),\r\n//        http: require('http'),\r\n        result: \"\"\r\n    },\r\n    context = vm.createContext(initSandbox);\r\n    vm.runInContext(code, context);   \r\n    return context.result;\r\n}\r\n\r\n//function sandbox(code, callback) {\r\n//    var util = require('util');\r\n//    var vm = require('vm');\r\n//     \r\n//    var contextObject = {\r\n//    }\r\n//        contextObject.contextMethod = function(text) {\r\n//        console.log(text);\r\n//    }\r\n//    var myContext = vm.createContext(contextObject);\r\n//        myContext.contextMethod2 = function(text) {\r\n//        console.log(text);\r\n//    }\r\n//    var scriptText = 'contextMethod(\"Hello World!\"); contextMethod2(\"Hello Universe!\");';\r\n//    var script = vm.createScript(scriptText);\r\n//    script.runInContext(myContext);\r\n//}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1851}]],"length":1851}
