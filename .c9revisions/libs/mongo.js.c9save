{"ts":1346334323380,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1346334578955,"patch":[[{"diffs":[[1,"// Helper class used to encapsulate calls to mongo.\nvar mongoUtil = (function () {\n    var mongoskin = require('mongoskin');\n    var connection = 'robot:dog.bone@alex.mongohq.com:10070/siterobot';\n    // Constructor\n    var robotCls = function() { };    \n});"]],"start1":0,"start2":0,"length1":0,"length2":258}]],"length":258,"saved":false}
{"contributors":[],"silentsave":false,"ts":1346979632099,"patch":[[{"diffs":[[0,"robot';\n"],[1,"    var collectionName = 'robotSandbox';\n"],[0,"    // C"]],"start1":189,"start2":189,"length1":16,"length2":57},{"diffs":[[0,"unction("],[1,"collection"],[0,") { };  "]],"start1":277,"start2":277,"length1":16,"length2":26},{"diffs":[[0,"    \n});"],[1,"\n\nexports.collectionName = collectionName;\n\n// read items from the mongo server and return the result. \nexports.read = function (collectionName, query) {\n    throw 'not implimented'\n};\n\n// load items into mongo\nexports.insert = function (collectionName, source) {    \n    throw 'not implimented'\n}"]],"start1":301,"start2":301,"length1":8,"length2":305}]],"length":606,"saved":false}
{"ts":1346979650785,"patch":[[{"diffs":[[0,"imented'"],[1,";"],[0,"\n};\n\n// "]],"start1":482,"start2":482,"length1":16,"length2":17},{"diffs":[[0,"imented'"],[1,";"],[0,"\n}"],[1,";"]],"start1":597,"start2":597,"length1":10,"length2":12}]],"length":609,"saved":false}
{"contributors":[],"silentsave":false,"ts":1352248904407,"patch":[[{"diffs":[[0,") {\n    "],[-1,"var "],[1,"// Constructor\n    var mongoCls = function() { };\n    \n    mongoCls."],[0,"mongoski"]],"start1":79,"start2":79,"length1":20,"length2":84},{"diffs":[[0,"');\n    "],[-1,"var "],[1,"mongoCls."],[0,"connecti"]],"start1":185,"start2":185,"length1":20,"length2":25},{"diffs":[[0,"    "],[-1,"var collectionName = 'robotSandbox';\n    // Constructor\n    var robotCls = function(collection) { };    \n});\n\nexports.collectionName = collectionName"],[1,"    \n    return mongoCls;\n})()"],[0,";\n\n/"]],"start1":266,"start2":266,"length1":157,"length2":38},{"diffs":[[0,"e, query"],[1,", callback"],[0,") {\n    "]],"start1":401,"start2":401,"length1":16,"length2":26},{"diffs":[[0,", source"],[1,", callback"],[0,") {    \n"]],"start1":522,"start2":522,"length1":16,"length2":26},{"diffs":[[0,"   \n    "],[-1,"throw 'not implimented'"],[1,"var conn = mongoUtil.mongoskin.db(mongoUtil.connection);\n    conn.collection(collectionName).insert(source, function(err, result) {\n        // todo: handle error    \n        conn.close();\n        if(err === null)\n            callback(result);\n        else\n            callback(err);\n    });\n};\n\n// load items into mongo\nexports.update = function (collectionName, source, id, callback) {    \n    var conn = mongoUtil.mongoskin.db(mongoUtil.connection);\n    conn.collection(collectionName).insert(source, function(err, result) {\n        // todo: handle error    \n        conn.close();\n        if(err === null)\n            callback(result);\n        else\n            callback(err);\n    })"],[0,";\n};"]],"start1":544,"start2":544,"length1":35,"length2":696}]],"length":1240,"saved":false}
{"ts":1352249898813,"patch":[[{"diffs":[[0,"robot';\n    "],[-1,""],[0,""],[1,"mongoCls.ObjectId =  require('mongodb/lib/mongodb/bson/bson').ObjectID;\n    "],[0,"    \n    ret"]],"start1":258,"start2":258,"length1":24,"length2":100},{"diffs":[[0,"    });\n};\n\n"],[-1,"//"],[1,"exports.save = function (source, id, callback) {    \n    var conn = mongoUtil.mongoskin.db(mongoUtil.connection);\n    source._id = mongoUtil.ObjectId(id);\n    // store.collection('sessions').updateById(session._id.toString(), {$set: status_obj} ); \n    // req.body.user._id= ObjectId(req.params.id);\n    conn.save(source, function(err, result) {\n        // todo: handle error    \n        conn.close();\n        if(err === null)\n            callback(result);\n        else\n            callback(err);\n    });\n};\n\n/*"],[0," load items "]],"start1":911,"start2":911,"length1":26,"length2":535},{"diffs":[[0,"il.connection);\n"],[1,"    // store.collection('sessions').updateById(session._id.toString(), {$set: status_obj} ); \n    // req.body.user._id= ObjectId(req.params.id);\n"],[0,"    conn.collect"]],"start1":1573,"start2":1573,"length1":32,"length2":177},{"diffs":[[0,"   callback(err);\n    });\n};"],[-1,""],[0,""],[1,"\n*/"]],"start1":1942,"start2":1942,"length1":28,"length2":31}]],"length":1973,"saved":false}
{"ts":1352249980532,"patch":[[{"diffs":[[0,"=  require('"],[1,"../"],[0,"mongodb/lib/"]],"start1":288,"start2":288,"length1":24,"length2":27}]],"length":1976,"saved":false}
{"ts":1352250221261,"patch":[[{"diffs":[[0,"erobot';\n   "],[1," //"],[0," mongoCls.Ob"]],"start1":257,"start2":257,"length1":24,"length2":27},{"diffs":[[0,"ire('../"],[1,"node_modules/"],[0,"mongodb/"]],"start1":298,"start2":298,"length1":16,"length2":29},{"diffs":[[0,"on);\n   "],[-1," "],[1,"\n   //////////////////"],[0,"source._"]],"start1":1051,"start2":1051,"length1":17,"length2":38},{"diffs":[[0,"tId(id);\n   "],[1,"\n  "],[0," // store.co"]],"start1":1109,"start2":1109,"length1":24,"length2":27}]],"length":2016,"saved":false}
{"ts":1352250525636,"patch":[[{"diffs":[[0,"ection);\n   "],[1," var oId = conn.ObjectID(id)"],[0,"\n   ////////"]],"start1":1047,"start2":1047,"length1":24,"length2":52}]],"length":2044,"saved":false}
{"ts":1352250833448,"patch":[[{"diffs":[[0,"    "],[-1,"var oI"],[1,"source._i"],[0,"d = "]],"start1":1056,"start2":1056,"length1":14,"length2":17},{"diffs":[[0,"req.params.id);\n"],[1,"    var saveOptions = { upsert: false, multi: false, safe: false };\n"],[0,"    conn.save(so"]],"start1":1281,"start2":1281,"length1":32,"length2":100},{"diffs":[[0,"onn.save(source,"],[1," saveOptions,"],[0," function(err, r"]],"start1":1370,"start2":1370,"length1":32,"length2":45}]],"length":2128,"saved":false}
{"ts":1352250872734,"patch":[[{"diffs":[[0,"ctID(id)"],[1,";"],[0,"\n   ////"]],"start1":1082,"start2":1082,"length1":16,"length2":17}]],"length":2129,"saved":false}
{"ts":1352251025582,"patch":[[{"diffs":[[0,"nction ("],[1,"collectionName, "],[0,"source, "]],"start1":959,"start2":959,"length1":16,"length2":32}]],"length":2145,"saved":false}
{"ts":1352251036485,"patch":[[{"diffs":[[0,"   conn."],[1,"collection(collectionName)."],[0,"save(sou"]],"start1":1383,"start2":1383,"length1":16,"length2":43}]],"length":2172,"saved":false}
{"ts":1352251449466,"patch":[[{"diffs":[[0,"exports."],[-1,"sav"],[1,"updat"],[0,"e = func"]],"start1":942,"start2":942,"length1":19,"length2":21},{"diffs":[[0,"d);\n"],[-1,"   //////////////////source._id = mongoUtil.ObjectId(id);\n   \n   // store.collection('sessions').updateById(session._id.toString(), {$set: status_obj} ); \n    // req.body.user._id= ObjectId(req.params.id);"],[0,"\n"],[1,""],[0,"    "]],"start1":1106,"start2":1106,"length1":214,"length2":9},{"diffs":[[0,"       callback("],[-1,"result"],[1,"source"],[0,");\n        else\n"]],"start1":1351,"start2":1351,"length1":38,"length2":38}]],"length":1969,"saved":false}
